import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
  id 'java'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'uk.minersonline.auth.server'
version = '1.0.0-SNAPSHOT'

//run {
//  systemProperty 'pf4j.pluginsDir', "${projectDir}/build/plugins"
//}

repositories {
  mavenCentral()
}

def mainVerticleName = 'uk.minersonline.auth.server.MainVerticle'
def launcherClassName = 'io.vertx.core.Launcher'

def watchForChange = 'src/**/*'
def doOnChange = "${projectDir}/gradlew classes"

application {
  mainClassName = launcherClassName
}

dependencies {
  implementation platform("io.vertx:vertx-stack-depchain:$vertxVersion")
  implementation 'io.vertx:vertx-web'
  implementation 'io.vertx:vertx-mysql-client'
  implementation project(':serverapi')
  testImplementation 'io.vertx:vertx-junit5'
  testImplementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
  implementation "org.pf4j:pf4j:$pf4jVersion"
  annotationProcessor("org.pf4j:pf4j:$pf4jVersion")
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

tasks.withType(ShadowJar) {
  archiveClassifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles()
}

tasks.withType(Test) {
  useJUnitPlatform()
  testLogging {
    events TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.FAILED
  }
}

tasks.withType(JavaExec) {
  args = ['run', mainVerticleName, "--launcher-class=$launcherClassName"]
    //, "--redeploy=$watchForChange", "--launcher-class=$launcherClassName", "--on-redeploy=$doOnChange"]
}
